name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

env:
    GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Cache Gradle dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Make gradlew executable
              run: chmod +x gradlew

            - name: Make download script executable
              run: chmod +x download-agent.sh

            - name: Download Nezha agent binaries for testing
              run: |
                  echo "Downloading ARM64 binary for CI testing..."
                  ./download-agent.sh nezha arm64

            - name: Run unit tests
              run: ./gradlew testDebugUnitTest --stacktrace

            - name: Run lint checks
              run: ./gradlew lintDebug --stacktrace

            - name: Build debug APK
              run: ./gradlew assembleDebug --stacktrace

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-results
                  path: |
                      app/build/reports/tests/
                      app/build/test-results/

            - name: Upload lint results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: lint-results
                  path: app/build/reports/lint-results-debug.html

            - name: Upload debug APK
              uses: actions/upload-artifact@v4
              with:
                  name: debug-apk
                  path: app/build/outputs/apk/debug/app-debug.apk

    code-quality:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Cache Gradle dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Make gradlew executable
              run: chmod +x gradlew

            - name: Check code formatting
              run: ./gradlew ktlintCheck || true

            - name: Run dependency vulnerability check
              run: ./gradlew dependencyCheckAnalyze || true

            - name: Generate dependency report
              run: ./gradlew dependencies > dependencies.txt || true

            - name: Upload dependency report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: dependency-report
                  path: dependencies.txt
